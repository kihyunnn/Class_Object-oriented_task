// 3week_task1_12211736_김기현
/* 간단한 설계 과정 :
* 1. 초기화 : 입력용 변수와 저장용 변수를 포함한 변수들을 다 초기화 한다.
* 2. 입력 : 입력 받을 친구 수와 그 친구 들의 정보들을 입력받는다.
* 3. 처리 : for문 안에 if문을 통하여, 저장용 변수의 나이와 입력용 변수의 나이를 비교하여, 저장용에 항상 나이가 많은 사람을 업데이트한다.
* 4. 출력 : for문이 끝나고 나면 저장용 변수에 들어있는 값들을 출력해준다.
* -for문 안에서 마지막에 출력해줄 데이터를 stored 변수들에 입력하기 위해 if 문을 사용하였는데, 처음 age를 age_stored랑 비교 할 때,
* age_stored를 선언만하고 초기화를 하지 않았다가 오류가 발생했다. 바로 사용할지 안할지 모르더라도 미리 다 초기화까지 해놓는 것이
* 오류를 방지하는 좋은 법임을 깨달았다.
* - 문제 자체는 어렵지 않았기 때문에, 이 데이터들을 입력하는 사용자 경험에도 신경을 썼다. 줄바꿈을 적절히 이용하여, 어떤 내용인지 한눈에
* 들어올 수 있도록 하였고, 마지막 정보를 출력해줄 때는 ---을 이용하여 출력값이 무엇인지 확실하게 구분해주었다.
* - 간단한 예제라 예외들을 많이 고려하지 않았지만, 따로 추가적인 예외를 고려해서 공부해봐야겠다.
* 예를들어 입력값이 초기화 해놓은 변수 타입과 맞지 않거나, 5명을 입력하기로 했는데, 4명만 입력하고 종료하고 싶거나, 한명을 추가로 입력해보고
* 싶은 경우가 있을 수도 있다. 모두 입력 받을 떄, 추가적인 if문을 통해 예외처리를 할 수 있을 것 같다.
* - 알고리즘 자체는 간단했지만, 사용자 경험 및 예외처리까지 추가적으로 생각해볼 수 있었다.
*/
#include <iostream>  
#include <string>
using namespace std;// std 네임스페이스 사용 

int main() {
    //쓰레기 값으로 인해 문제가 생기는 것을 방지하기 위해 선언과 동시에 초기화를 했습니다.
    //뒤에 _stored가 붙은 변수들은 저장용 변수로, 입력용 변수들과 비교하여 가장 큰 값을 저장하는 역할을 합니다.
    int age = 0, age_stored = 0, people = 0, people_stored = 0;
    string name = "", name_stored = "";
    float GPA = 0.0, GPA_stored = 0.0;
    string PNumber = "", PNumber_stored = "";
    cout << "----------------친구 관리 정보 프로그램----------------" << endl;
    cout << "안내에 따라 친구 수와 친구 정보를 입력하시면, 나이가 가장 많은 친구의 정보를 출력합니다." << endl;
    cout << "입력 할 친구 수를 입력해주세요 : ";
    cin >> people; //몇명을 입력받을지 입력받는다.
    cout << endl;

    for (int i = 0; i < people; i++) { //입력받은 수 만큼 반복을 시행한다.
        cout << i + 1 << "번 친구입니다. 정보를 입력해주세요" << endl;
        cout << "이름을 입력해주세요 :";
        cin >> name; //이름 입력
        cout << "나이를 입력해주세요 :";
        cin >> age; //나이 입력
        cout << "GPA를 입력해주세요. ex)3.0 :";
        cin >> GPA;//GPA입력
        cout << "핸드폰 번호를 입력해주세요 :";
        cin >> PNumber; //핸드폰 번호 입력
        cout << endl;
        if (age >= age_stored) { // 여기 if문을 통해 저장용 변수에 항상 가장 나이가 많은 사람의 정보를 저장한다.
            name_stored = name;
            age_stored = age;
            GPA_stored = GPA;
            PNumber_stored = PNumber;
            people_stored = i + 1; //나중에 가장 나이가 많은 사람이 몇 번째에 입력했던 사람인지 알려주기 위한 변수
        }

    }
    cout << endl;
    cout << "저장된 정보중 최고령 친구의 정보를 출력해드리겠습니다." << endl;
    cout << "가장 나이가 많은 친구는 " << people_stored << "번으로 입력하신 " << name_stored << "님 입니다." << endl;
    cout << "--------------------------------" << endl;//가장 나이 많은 친구의 정보를 출력해준다.    
    cout << "이름 : " << name_stored << endl;
    cout << "나이 : " << age_stored << endl;
    cout << "GPA : " << GPA_stored << endl;
    cout << "전화번호 :" << PNumber_stored << endl;
    cout << "--------------------------------" << endl;
    cout << "프로그램을 종료합니다.";

    return 0;
}
